<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于爱情</title>
    <link href="/2025/09/03/%E5%85%B3%E4%BA%8E%E7%88%B1%E6%83%85/"/>
    <url>/2025/09/03/%E5%85%B3%E4%BA%8E%E7%88%B1%E6%83%85/</url>
    
    <content type="html"><![CDATA[<h2 id="关于爱情"><a href="#关于爱情" class="headerlink" title="关于爱情"></a>关于爱情</h2><p>我是一个极看重爱情的人，可以说是恋爱脑吧，但是我觉得恋爱脑并不是一个贬义词，我觉得为自己所爱的人付出一切那是极美好的，我是开心的。也许是因为小时候武侠片看多了吧，就希望这一生只爱一个人，只谈一次恋爱，青丝到白头。</p><p>我遇到我的一生所爱是在一八年八月二十八日，那是大学开学的第一天，在班会上。那时的我是腼腆的，害羞的，我性格也是内向的，但我是「疯狂」的。可以说我是一个比较极端的人，不喜说话。</p><h3 id="对你的喜欢，从遇见开始"><a href="#对你的喜欢，从遇见开始" class="headerlink" title="对你的喜欢，从遇见开始"></a>对你的喜欢，从遇见开始</h3><p>我的宝也是高冷的，我也是内向的，按理来说我和我的宝贝是很难有共同话题的。但我们就是个例外。在班会上见到她的时候还把她的名字给记错了，就只记得她的样子，但是一直都没说过话，我性格内向是一个原因，另一个原因也是我相信我们的缘分。</p><p>时间过了将近一个学期，我们开始说话，聊天是因为高数的期末考试，她问我数学题，就这么地和她聊上了。后面我们成了很好的朋友，但是我不敢表白，我觉得时机不到。她的舍友都说我是喜欢她，她也问过我，但是我一直否认，她也信了。</p><p>二零年六月一日我表白了，我们在一起了，那是早上，我发了一段小作文给她，我也不敢看，很害怕，很紧张。她同意了，那时我觉得是世上最幸福的人了，晚上我们见了面，那是在校园的道路旁，旁边有个路灯，再次深情表白，她抱住了我，我觉得自己像个憨憨，还让她主动抱我，我当时还有点愕然，没反应过来她说我说到现在，说不该这么主动。</p><h3 id="在对你的伤害上完善性格"><a href="#在对你的伤害上完善性格" class="headerlink" title="在对你的伤害上完善性格"></a>在对你的伤害上完善性格</h3><p>我们在一起之后，发生过很多矛盾，不过大部分是我的问题，她和我在一起之后没了脾气，没了性格，失去了自我，我一开始就告诉她，有事，有委屈不要憋心里，要说出来，我们一起解决问题，这样我们的问题和矛盾才会越来越少。</p><p>有好几次，我控制欲很强，我知道她和舍友一起去逛街，我会吃醋，会发脾气，这让她不敢和她朋友去逛，我心里只有她一个人，导致我也这样要求她。</p><p>还有我讨厌迟到，她迟到了我也生气，有几次是吃饭的时候迟到，我就不吃东西，以不吃晚饭来要挟她，不要迟到，她就会道歉，哄我。</p><p>还有一次去图书馆，我叫她一起吃早点之后再去，她迟到了，我又怪了，她在楼下一直哭，我独自去了图书馆，但我也是急忙跑上去二楼看着她，那时候还是冬天，很冷。几分钟之后我又跑回去找她，想把她送回宿舍，在路上拉拉扯扯……</p><p>还有一次，因为她不及时回消息，我生气，我和她说我出去和朋友喝酒了，她立马跑到我宿舍楼下找我，大晚上的，也是冬天，还飞着雨。其实我并没有出去，我在朋友宿舍，我跑到阳台边看她了，一直发消息叫她回去，她站了好一会才回去的，回去还干了一瓶江小白……</p><p>还有我俩去浙江新昌打假期工，那几天是台风天，那晚我们闹矛盾，就只是因为她想吃烧烤，晚上去了她说要吃这种，那种…我就说这不好，那不好，各种扫兴，然后她就说不吃了，不高兴了，我也不高兴了，就回去，还没牵着她，回去之后我拉了窗帘，可能是力气大了点，窗帘杆就掉了下来，事后她和我说她很害怕当时，但是我但是就只是单纯拉窗帘，掉下来了我也很意外，然后晚上打雷，她害怕的一直哭，我不抱她，还吼了她。</p><p>我现在想想，自己怎么这么混蛋，我是怎么忍心的，无形之中的 PUA 了她，对她的伤害我一生都无法弥补。我很幸运，我的宝没有离开我，我一直在反思，我知道这一切大都是我的问题，我思考了很多，主要原因还是我原生家庭的影响，从小都是在高压，严肃的家庭中成长，爸妈又经常不在身边，基本都是和爷爷奶奶一起长大的，缺爱，缺朋友，一次抓到，就勒的太紧了。还有一个原因，她是我第一个爱的人，第一次学习怎么爱人，我需要时间……</p><p>从二一年开始，我开始做出改变，我爱她，我不对她大吼大叫，不会冷暴力，事事有回应；我爱她，我想让她做回她自己，不要丢失了自己，要有自己的脾气，无论好脾气还是坏脾气，我都接着；我爱她，我愿意做「月亮」，让她做我的「地球」……</p><p>我恨我自己，对以前做的种种感到愧疚、懊悔，好在她没有离开我，给了我这个机会，我会用一生守护她, 前两年对她的伤害，我会用后半辈子去弥补；</p><p>宝，时至今日，是你让我的性格改变了，让我反思了自己前二十年的经历，这也是只为你一个人改变的，因为我想好好爱你，不想浑身是刺，不想伤到你；我既然选择了喜欢你，哪有那么容易放弃你，我不是图新鲜感的人，我对你的爱只会越来越深。是你的出现，让我有了心动恋爱的感觉，也有了可以想念的人。在我想你的时候，心里会甜甜的傻笑。我好不容易遇见你，无论多难都不能把你弄丢了，你也别想着丢下我，我不想别人代替你，也不想重新认识别人，我只想做你的唯一，往后余生，只爱你一人便足矣。</p><p>人生不过七十左右，除去十年懵懂，十年劳碌，就只剩下五十年。这五十年又要除去一半的黑夜，便只留下二十五年。吃饭饮茶，沐浴更衣，东奔西跑，做工生病，要花掉不少时间。真正留下来的可以陪自己心爱的人在一起的时间，掐指算来少之又少，爱便是常觉亏欠。</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>情感问题</tag>
      
      <tag>成长</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重复文件清理</title>
    <link href="/2025/09/01/%E9%87%8D%E5%A4%8D%E6%96%87%E4%BB%B6%E6%B8%85%E7%90%86/"/>
    <url>/2025/09/01/%E9%87%8D%E5%A4%8D%E6%96%87%E4%BB%B6%E6%B8%85%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>最近在整理电脑的时候，发现了很多重复的文件，特别是电脑壁纸，我用的壁纸都是下载好的，通过幻灯片放映，以前每次下载下来之后每张图都有几十MB的大小，所以我通过图压将图片压缩了。导致所有图片混在一起，还有c盘的一些文件也是重复的很多，又不敢删，怕把文件误删了。</p><p>无独有偶，最近在 GitHub 上发现了一款名叫<code>Czkawka</code>的开源免费工具，很好用，推荐给大家。</p><p><code>智能重复文件检测</code>：这个功能不仅是对比文件名字，而是真正的对比文件内容，你说厉不厉害吧！</p><p><code>相似图片识别</code>：这个功能可以找出那些相似又不完全相同的文件，特别是帮女朋友拍照的时候连拍几十张，总有像素不好的，可以清理掉，省的一张张去看。</p><p><code>空文件夹清理</code>：能扫描所有空文件夹，并清理掉。</p><p><code>大文件查找</code>：能快速找出占用空间最多的文件；</p><p><code>临时文件清理</code>：能自动识别和删除系统的临时文件；</p><p><code>相似视频检测</code>：连视频文件都能识别出来相似的；</p><p><code>损坏文件检测</code>：能找到无法正常打开的损坏文件；</p><p><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMYaLf-dKwX4YgfHWqWFZFWDdTBQ8IAAunLMRs7eMFV7u__5jasGlMBAAMCAAN3AAM2BA.jpg"></p><p>GitHub 项目地址：<a href="https://github.com/qarmin/czkawka">https://github.com/qarmin/czkawka</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>神器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 VPN 需要注意什么？</title>
    <link href="/2025/08/29/%E4%BD%BF%E7%94%A8%20VPN%20%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <url>/2025/08/29/%E4%BD%BF%E7%94%A8%20VPN%20%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是VPN？"><a href="#什么是VPN？" class="headerlink" title="什么是VPN？"></a>什么是VPN？</h2><p>VPN 是一种隐藏你的 Internet 协议（IP）地址的服务。这使你可以匿名访问互联网，因为没有人可以将你的数据链接到你的 IP 地址。</p><p>要了解 VNP 的作用，只需要分解「虚拟」、「私有」、「网络」三个词：</p><div class="note note-success">            <ul><li>VPN 是「虚拟的」，因为它们是一种数字服。你不需要电缆或者硬件即可使用。</li><li>VPN 是「私人的」，因为它们会加密你的链接让你在没有政府、互联网服务提供商（ISP）、网络犯罪分子和其他旁观者窥探的情况下访问互联网。</li><li>VPN 是「网络」，因为它们在你的设备、VPN 服务器和互联网之间建立了安全连接。</li></ul>          </div><h2 id="使用-VPN-是否违法？"><a href="#使用-VPN-是否违法？" class="headerlink" title="使用 VPN 是否违法？"></a>使用 VPN 是否违法？</h2><p>截止2022年，包括中国、伊拉克、朝鲜、俄罗斯、土耳其等多个国家&#x2F;地区已经将 VPN 定为非法。虽然很多时候的都抱着侥幸心理，但一定不能做一些网络犯罪活动，包括但不限于看小电影，浏览和发表一些关乎政治性的言论，近几年已经有很多起使用 VPN 被请去喝茶了。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="VPN-不能保护隐私"><a href="#VPN-不能保护隐私" class="headerlink" title="VPN 不能保护隐私"></a>VPN 不能保护隐私</h3><p>很多人人为 VPN能保护自己的隐私，因为觉得既然 VPN 能隐藏自己的 IP ，理所当然的也能隐藏自己的隐私。其实这是误解，首先，VPN 的初衷就不是保护隐私。其次，隐藏所谓的 IP 只是对第三方隐藏而已，对 VPN 提供商你的隐私还是透明的。</p><p>最后，VPN 提供商为了收集用户信息，故意提供免费的 VPN 服务。</p><h3 id="VPN-只是一个代理人"><a href="#VPN-只是一个代理人" class="headerlink" title="VPN 只是一个代理人"></a>VPN 只是一个代理人</h3><p>VPN 诞生于1966年，初衷只是为了提供一个安全的、临时的连接，去访问你不能访问到的特定网络，比如公司内网，通常用作办公。</p><p>远程办公：在家使用公网，通过 VPN 连接公司内网，这样是安全的，方便的。</p><p><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMZaMP0IsXHkSdtRFXxsYvvpKkwXUgAAgTJMRuamiFWgNxZgQIZNrYBAAMCAAN5AAM2BA.jpg"></p><div class="note note-success">            <p><strong>为什么安全？</strong></p><p>因为 VPN 客户端和服务端之间是通过加密通道通信，所以使用 VPN 能够保证数据不被篡改和偷窃。这对于公司的商业机密至关重要。</p>          </div><h3 id="选择信任可靠的-VPN-提供商"><a href="#选择信任可靠的-VPN-提供商" class="headerlink" title="选择信任可靠的 VPN 提供商"></a>选择信任可靠的 VPN 提供商</h3><p>因为你的信息对于 VPN 都是透明的，所以选择可靠的提供商至关重要，无论是公司还是个人，都需要选择可靠、可信的提供商。</p><div class="note note-warning">            <p><strong>网络不是法外之地，谨言慎行！</strong></p>          </div>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络知识</tag>
      
      <tag>VPN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件分享</title>
    <link href="/2025/08/01/%E5%88%86%E4%BA%AB%E4%B8%80%E4%BA%9B%E7%A5%9E%E5%99%A8/"/>
    <url>/2025/08/01/%E5%88%86%E4%BA%AB%E4%B8%80%E4%BA%9B%E7%A5%9E%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>这篇文章介绍一下我自己使用的一些软件和工具，大家多多分享。这些工具都是来自于微信的一些公众号文章中看到的，最主要的来源是<a href="%5B%E9%98%BF%E8%99%9A%E5%90%8C%E5%AD%A6%E7%9A%84%E5%82%A8%E7%89%A9%E9%97%B4%5D(https://www.axutongxue.cn/?switchLanguage=zh)">阿虚同学</a>的储物间。</p><h2 id="浏览器相关"><a href="#浏览器相关" class="headerlink" title="浏览器相关"></a>浏览器相关</h2><h3 id="电脑端"><a href="#电脑端" class="headerlink" title="电脑端"></a>电脑端</h3><ol><li>360浏览器<br>没错，第一个就是360极速浏览器X，相信很多人还是对360旗下的各种软件还带有滤镜，觉得360就是流氓的代名词，各种广告，全家桶，捆绑病毒都是来自360。但是360极速浏览器X就是我每次重装系统之后必要的软件，虽然它并不是我的主力浏览器，但是我肯定安装它，就因为现在浏览器基本都阉割了 Flash 模块，360极速浏览器X兼容了Flash，对一些老的网站很友好。</li><li>Edge 浏览器<br>Edge 浏览器作为我的主力浏览器，他和谷歌差不多，弃用谷歌浏览器是因为 Edge 浏览器自 2020 年便使用了谷歌内核，又因谷歌在国内的各种原因，果断弃用啦。</li></ol><h3 id="手机端"><a href="#手机端" class="headerlink" title="手机端"></a>手机端</h3><p>手机端的话我就只考虑能装扩展的，其他一概不考虑，我个人使用过有三个：</p><ol><li>狐猴浏览器</li><li>Kiwi 浏览器</li><li>雨见浏览器（目前正在使用）<blockquote><p>一开始使用的是狐猴和 Kiwi ，使用中总是觉得有一些不舒服的，例如，弹窗播放，设计的很不好用。后来发现雨见浏览器，国人开发，人性化，符合国人使用的习惯。</p></blockquote></li></ol><h2 id="AI-相关"><a href="#AI-相关" class="headerlink" title="AI 相关"></a>AI 相关</h2><h3 id="AiPy"><a href="#AiPy" class="headerlink" title="AiPy"></a>AiPy</h3><p>我目前使用的 AI 工具叫做 <strong>AiPy</strong> ，没听说过吧。不过 Manus 大家应该都听说过，当时 Manus 刚出来的时候一个邀请码能卖到上万元，Manus 自称全球首款通用性 Agent。而现在，AiPy 面世，并且是开源的! 重要的事情说三遍，国产开源！可以本地化部署，无脑下载安装包，点击运行就可以。</p><h4 id="什么是-AiPy-呢？"><a href="#什么是-AiPy-呢？" class="headerlink" title="什么是 AiPy 呢？"></a>什么是 AiPy 呢？</h4><p><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMIaJN_J-0RAywdQ1fXZsKYMmMJ1CgAAvLEMRtmEZhUoS_Zj0wAAS-iAQADAgADdwADNgQ.png"><br>AiPy 是一款融合 LLM 与 Python 开发生态的创新工具。它以 “Python-Use” 范式重新定义 AI 任务执行逻辑，旨在让大模型真正 “动手” 完成任务，可通过 Python 生态实现 “知行合一” 的 AI 生产力革新。  </p><p>AiPy的大致原理就是通过LLM解析你的需求，规划实现步骤，然后将实现的内容转化成python代码，然后去创建虚拟环境执行生成的python代码。针对执行的结果进行迭代，直到最终解决问题。  </p><p>AiPy 是完全开源的，GitHub开源地址：<br><a href="https://github.com/knownsec/aipyapp">https://github.com/knownsec/aipyapp</a></p><h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4><p>这里附上下载地址：<a href="https://www.aipyaipy.com/">下载地址</a> ，具体使用方法自己上官网探索吧。真的很强大。</p><h2 id="笔记相关"><a href="#笔记相关" class="headerlink" title="笔记相关"></a>笔记相关</h2><p>笔记主打就是一个多端互通，数据同步，特别是 PC 端和移动端的数据能打通最好。这里我最常用的就是 Obsidian 和 Notesnook 两个，还有一个是 Notion 的平替 FlowUs。</p><h3 id="Obsidian"><a href="#Obsidian" class="headerlink" title="Obsidian"></a>Obsidian</h3><p>这个笔记软件又叫黑曜石，我使用它主要有三点：</p><ol><li>所有笔记都以纯文本 Markdown 保存在本地，无风险。且全平台支持，Android，Mac，win 和 liux 皆可。</li><li>知识网络构建，双向链接使得你所有笔记能联系起来，构成一张巨大的网络。</li><li>丰富的插件社区，区别于传统的 Notion 和印象笔记，Obsidian 有强大的社区支持，很多优秀的插件能将你的黑曜石打造的强悍无比。我个人倾向于的一个插件就是 vim 插件，它能让 Obsidian 成为一个 vim 编辑器，毕竟写文章的时候去碰鼠标是一件非常不愉快的事情。</li></ol><blockquote><p>在同步这个问题上面，我使用的是 OneDrive + OneSync 方案，因为他免费，OneDrive 免费的有5个G的空间，存储文本文件足够用了；OneSync 的话可以自己 Google 一下，这两个工具就能让我的 PC 端和移动端打通。</p></blockquote><h3 id="Notesnook"><a href="#Notesnook" class="headerlink" title="Notesnook"></a>Notesnook</h3><p>Notesnook 是一个极注重隐私的一个笔记软件，而且它开源了！<br>它是一个开源的、端到端加密的应用程序。而且也正是 Linux 用户最好的记事应用程序之一。<br>我一般用来记一些密码，密钥和 tokenID 等。</p><h3 id="FlowUs"><a href="#FlowUs" class="headerlink" title="FlowUs"></a>FlowUs</h3><p>FlowUs 作为 Notion 的平替，我一开始的软件是 Notion，但是 FlowUs 问世之后我就迁移过来了，FlowUs 国产，访问更加稳定。<br>通常我记录一些临时的想法，还有一些文章的草稿，同样也不需要担心同步，但是隐私方面就不能保证了，因为我也不用它来记一些重要的信息。</p><h2 id="记事本相关"><a href="#记事本相关" class="headerlink" title="记事本相关"></a>记事本相关</h2><p>windows 上面自带的的记事本别提多难用了，打开一个代码文件，全部堆叠在一块，对于我这种爱倒腾的人来说很难受，还有就是功能简单。<br>我常用的就是 notepad– 和 sublime，其中 <a href="https://github.com/cxasm/notepad--">notepad–</a> 是国产开源免费的，sublime 的话需要收费，想要使用也是容易，网上很多，自己 Google 一下。</p><h2 id="一些小工具"><a href="#一些小工具" class="headerlink" title="一些小工具"></a>一些小工具</h2><h3 id="Seer（预览）"><a href="#Seer（预览）" class="headerlink" title="Seer（预览）"></a>Seer（预览）</h3><p>这是一款能预览几乎所有格式文件的神器，图片、TXT、Markdown、音乐、视频、Word、PPT……几乎涵盖了所有常用的文件了，只是有些需要安装插件，且软件本身是收费的，也有免费版，可能性能比收费的好一点。要说缺点的话就是仅支持 Windows，Mac 和 Linux 用户无缘了。</p><h3 id="Pixpin-截图工具"><a href="#Pixpin-截图工具" class="headerlink" title="Pixpin 截图工具"></a>Pixpin 截图工具</h3><p>截图软件我就用过两个，一个是 Snipaste，一个就是 Pixpin。其实之前一直使用的都是 Snipaste，后面换成了 Pixpin，只因 Pixpin 支持文字识别，同时适配 Quicker 工具的插件 OCR。</p><h3 id="Quicker"><a href="#Quicker" class="headerlink" title="Quicker"></a>Quicker</h3><p>热衷于使用鼠标的人有福啦，Quicker 就是一个针对鼠标设计的软件，它能将电脑的很多操作都用鼠标点两下就可以啦，包括工作流，并且社区有很多开发的好用的工具，针对不同的软件有不同的工具，就像我用它的理由就是搜索，我们通常搜一个东西需要打开浏览器输入问题，或者复制某段话，粘贴到浏览器搜索框。使用 Quicker 能让你一下就可以直达结果，选中文字点击鼠标中键唤出界面，点一下 EVER 智识工具就能帮你做完整个动作。</p><h3 id="PP-剪切板"><a href="#PP-剪切板" class="headerlink" title="PP 剪切板"></a>PP 剪切板</h3><p>这是我近期才发现的剪切板管理工具，占用小，功能强大，虽然 windows 的 win+v 便可查看剪切板内容，但是功能太简单，PP 剪切板能把复制的内容做一个分类，文本，文件，图片这些。同时能够显示在哪复制的，一目了然。</p><h3 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h3><p>这个不用说了吧，鼎鼎大名，搜索全磁盘文件，快速。</p><h3 id="图片加水印"><a href="#图片加水印" class="headerlink" title="图片加水印"></a>图片加水印</h3><p>相信很多人都上传过自己的身份证照片，或者其他证件照片，不知道大家有没有想过如果上传的软件或者网站你攻击或者信息泄露，被贩卖，后果多严重，我有这个意识也是多年前在阿虚大佬那里看到过文章的，从那时起就开始给照片加水印了。但是加水印有需要软件来加，上传岂不是又担心泄露个人信息，别怕，这里给大家推荐两个软件，保证完全离线。</p><h4 id="电脑端-1"><a href="#电脑端-1" class="headerlink" title="电脑端"></a>电脑端</h4><p>电脑端是 GitHub 的一个开源项目，自行下载。<br><a href="https://github.com/joyqi/sfz">https://github.com/joyqi/sfz</a></p><h4 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h4><p>我这里只推荐安卓系统的，苹果不推荐，没用过苹果手机，也不喜欢，原因逃不过一个穷字！<br>软件叫简单水印，同样是 GitHub 开源项目: <a href="https://github.com/rosuH/EasyWatermark">https://github.com/rosuH/EasyWatermark</a></p><h3 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h3><p>图片压缩目的是节省内存，如果是内存大户请跳过。<br>软件叫图压，下载地址自行寻找，官网好像挂了，软件还能用，找找网盘吧。</p><h3 id="2345-看图"><a href="#2345-看图" class="headerlink" title="2345 看图"></a>2345 看图</h3><p>自行找绿色版本，图片多的话比自带图片查看软件性能好很多，人性化。</p><h3 id="彻底关闭-UAC-小工具"><a href="#彻底关闭-UAC-小工具" class="headerlink" title="彻底关闭 UAC 小工具"></a>彻底关闭 UAC 小工具</h3><p>字面意思 UAC 就是用户账户控制，当我们每次运行一个软件，这个软件涉及到用户的权限的时候，每次都会弹出一个弹窗，问你是否允许更改用户配置，是不是很烦？这个是可以关闭的，特别是运行绿色软件的时候，这个很重要。</p><p>绿色软件和 UAC 的小工具下载这里给大家推荐一个网站： <a href="https://www.rjno1.com/">软件No1 – 绿色软件 – 绿色便携软件下载</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件</tag>
      
      <tag>神器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>看完「刘柳」的故事才理解《江雪》的孤寂</title>
    <link href="/2025/06/27/%E6%9F%B3%E5%AE%97%E5%85%83%E7%94%9F%E5%B9%B3/"/>
    <url>/2025/06/27/%E6%9F%B3%E5%AE%97%E5%85%83%E7%94%9F%E5%B9%B3/</url>
    
    <content type="html"><![CDATA[<h2 id="家世与童年"><a href="#家世与童年" class="headerlink" title="家世与童年"></a>家世与童年</h2><p>我的名字叫柳宗元，字子厚。公元七百七十三年，即大历八年，我出生在京城长安。我的家族出自声名显赫的河东柳氏，历代有显贵先辈，曾有人官至宰相。然而，到了我出生的那年，家族的声势已不如往昔辉煌。所谓「世衰道危」便是如此吧。尽管如此，我仍然引以为傲的是我的父亲柳镇，他性格刚正、信义出身，曾担任殿中侍御史，刚正不阿。而我的母亲卢氏出自范阳卢氏，知书达理，信佛向善。</p><p>四岁时，我跟随母亲居住在长安西郊的庄园。那年春天，长安城外的田野间依然弥漫着寒意，母亲带着我坐在院中，朗声诵读诗文。她轻声对我说：「你当静心读书，日后必成为博学、有用之人。」我看着她温柔而坚定的眼神，第一次感受到知识之光的温暖。那时，父亲因公务常常不在身边，母亲便成了我最初的启蒙老师。</p><h2 id="动乱与成长"><a href="#动乱与成长" class="headerlink" title="动乱与成长"></a>动乱与成长</h2><p>公元七百八十二年，我九岁时，建中之乱爆发，烽火骤起，朝廷与藩镇之间的矛盾日益尖锐。曾经繁华的长安城被战火笼罩，听闻乱兵或将攻破城门，母亲带着我一路颠簸，前往父亲任职的夏口投奔他。公元七百八十五年，我约十二岁，战火稍有平息，父亲奉调赴江西任职，我又跟随他辗转。父亲为官清廉，不惧权贵，常直言进谏，却因此得罪了朝中权臣。有人劝他稍作退让，父亲却一脸坚毅，始终无愧于心，仿佛在说：「即使屈居人下，也无惧强权，无愧于心。」我悄悄站在父亲身边，尽管年幼，却对这铿锵之言铭刻于心。与此同时，我常常想到那些因战乱而受苦的百姓，愈发感到国家的积弊之深。</p><p>也是在那一年，藩将李怀光叛乱，朝廷平定后，南方州郡一片欢腾。崔中丞听闻我读书勤勉且略有文采，竟派人请我代他写一篇贺平李怀光的表章，向皇帝奏报。虽然我心中惶恐，却不敢怠慢，仔细斟酌，措辞对仗工整，力求典雅庄重。忙碌几日后，我满怀忐忑地呈上奏章，竟得到一片喝彩，大家都在称颂名叫柳宗元的少年，认为我乃神童！完成那篇贺表之后，我终于体会到文字的力量，它不仅可以怡情养性，更能参与国家大事。</p><h2 id="理想与责任"><a href="#理想与责任" class="headerlink" title="理想与责任"></a>理想与责任</h2><p>记得那时我趴在窗前，透过纸窗的缝隙，仰望漫天星辰，开始暗自思量：书中的道理若能实施于天下，或许乱世便能太平。文人的笔锋，不正是另一种刀剑吗？孩童时期的动荡与见闻，在我心中埋下了一粒种子，随着所见所闻不断生长。就这样，我怀着少年心气，在母亲的教导与父亲的言传中一路成长。我目睹了朝局动乱，见识过社会百态。母亲的仁慈与父亲的刚直在我心底交融，使我对儒学与佛理的并行关照愈发坚定。</p><p>随着岁月推移，我心中逐渐凝聚出一个抱负：若有朝一日能立足庙堂，必将笔墨化作利剑，匡正时弊，拯救黎民于水火，方不负读书人的赤诚。公元七百九十三年，我二十一岁，站在长安街头，心潮澎湃，因为我刚刚实现了少年的梦想，进士及第。然而，这份初入仕途的激动与欣喜，却被突如其来的噩耗击溃——父亲去世了。我急急赶回家中，守孝三年。失去亲人的感觉恰如冰冷的长安冬夜，挥之不去。父亲过世的这三年，让我对命运有了更深认识，但我知道，生活必须继续。悲痛逐渐化作力量，我重新出发，回归仕途。</p><h2 id="再度出发"><a href="#再度出发" class="headerlink" title="再度出发"></a>再度出发</h2><p>公元七百九十八年，我二十六岁，参加了博学鸿词科考试，并顺利通过。此次成功未让我沾沾自喜，而是让我感受到一种与年少时不同的沉重。我已不再是那个只想着文学才子梦的青年，而是肩负着对国家、对人民的责任。这一年，我得以担任集贤殿书院的正字，负责校对经籍、管理皇家图书。虽然官职不高，却肩负着不可忽视的责任。我想起父亲曾告诫我的，读书不仅是为了个人的光辉，更是为了国家的兴盛。这句话，正是驱动我继续前行的力量。</p><p>岁月匆匆，公元八百零一年，我二十八岁。就在那时，我被任命为蓝田县尉，重新回到基层。开始接触社会现实，生活愈发复杂，不再是单纯的书斋里的纸上谈兵。在那段时间，我见到了无数贫苦百姓的疾苦，开始将更多心思投入政治改革。逐渐明白，单靠文字的力量远不及实际的行动。我将理想与抱负融入每一份报告、每一篇奏章中，特别期待通过这一途径改善百姓疾苦，重建国家秩序。</p><h2 id="改革与挫折"><a href="#改革与挫折" class="headerlink" title="改革与挫折"></a>改革与挫折</h2><p>公元八百零三年，我约三十岁，任职监察御史，深刻铭记那段岁月。我与刘禹锡、韩愈、韩泰等挚友共事，彼此之间的关系超越简单的同事，更如知己与伙伴。我们讨论的不仅是文学艺术，更多的是国家改革与未来。都盼望着以一腔热血为国家带来新的气象。是的，我知道我们想做的事情叫改革。尽管我清楚，所有改革之路都充满荆棘，但我已不再是那个单纯的文学青年。我意识到，所谓文学才子，不仅在文词上求得一时盛名，更要通过实际行动承担国家重任。</p><p>然而，我从未想过，理想与现实之间会有一道深不可测的鸿沟。曾几何时，我与王叔文、王伾、刘禹锡等人怀揣救国安民的雄心志向，推行改革，力求让大唐恢复昔日辉煌。我们全心全意推行被后世称为「永贞革新」的改革，内容涵盖打击藩镇、整顿税收、废除宫市以及惩治贪官等。改革措施犹如春风拂面，振奋了无数民众的心。然而，永贞革新未进行多久，命运的脉络远比我们所愿看到的复杂。</p><h2 id="失落与反思"><a href="#失落与反思" class="headerlink" title="失落与反思"></a>失落与反思</h2><p>公元八百零五年，时年三十二，我站在权力的边缘，因与王叔文等人的政见契合而获提拔为礼部员外郎，掌管部分国家礼仪与贡举。我们推行的永贞革新遭到宦官、藩镇及许多保守势力的强烈反对。尽管短期内民众的支持曾给我们带来一丝希望，权力的博弈却始终充满不可控的变数。曾经支持我们的顺宗帝病情加重，无力理政。宦官集团在背后操控一切，宫中陷入混乱。我清楚记得，那是四月的一天，顺宗被迫禅位于太子李纯，历史称之为「永贞内禅」。李纯（宪宗）继位后，对我们革新派充满敌意。在那个令人窒息的八月，我与刘禹锡、韩泰、陈谏等人一同被贬为远州司马！这就是历史上所说的「二王八司马」事件吗？改革的梦想在无数的压迫与争斗中破碎。</p><p>最令我感到心寒的并非外界的打压，而是许多人开始与我和同僚划清界限。我几乎要崩溃，背后是曾经的同盟与朋友，而眼前是划清界限的疏离与权力的无情。我心中涌起一股愤慨：为什么要在权力面前低头？为什么要放弃曾经的理想与奋斗？我想起父亲面对困境时曾说过的话：「无忝无怍。」这句话让我在逆境中仍保持坚韧的心，始终不向命运屈服。</p><h2 id="贬谪与孤独"><a href="#贬谪与孤独" class="headerlink" title="贬谪与孤独"></a>贬谪与孤独</h2><p>公元八百零六年八月，我接到宪宗的诏令，心中如遭重击。诏书称：「纵逢恩赦，不在量移之限」，意味着即使皇帝大赦天下，我们这些人也不在赦免范围之内，令人绝望。于是，我带着母亲与仅存的亲情，踏上了命运交错的漫漫贬途，被贬至远离京城的永州。这里环境恶劣，气候湿热，满地蛇虫野兽，让北方的我水土不服。更让我难以忍受的是，母亲在此地的病痛因医疗条件匮乏而无法得到救治。公元八百零七年五月，她因病去世。我想起母亲随我四处颠簸，忍受风雨辛酸。若我柳宗元未被贬，她本该安享晚年，却未能熬过这荒凉的异乡。四年后，我的女儿也在永州病逝，望着她年幼的面庞渐渐失去生机，我几乎失去了所有力量。一个接一个的打击，如海浪般将我拍至无尽深渊。</p><p>那段时间，我曾试图振作，想用文字与理想填补内心的空虚与悲伤，但每次动笔，泪水便模糊了视线。身体上的痛苦与心灵的折磨交织在一起，令我几乎无法承受。我，柳宗元！曾几何时，站在朝廷中心，怀揣改革理想，承载着为大唐复兴的希望，如今却只能在这片遥远的荒土中回忆起早已逝去的梦想，任凭时光无情摧残。</p><h2 id="思考与创作"><a href="#思考与创作" class="headerlink" title="思考与创作"></a>思考与创作</h2><p>在永州的日子里，我不仅忍受自然的恶劣环境，还与无尽的痛苦与内疚作斗争。性格本就不外露的我，痛苦便成了我最亲密的朋友。我的身体日渐衰弱，牙齿开始松动，双鬓渐白。彼时，我尚在三十多岁，却显得老态龙钟、形容憔悴。尽管如此，我却从未后悔过自己的选择。于这荒凉山水之间，在孤独岁月里，我重新审视自己的人生。渐渐地，政治的幻灭使我从追求功名的执着，转向更深沉的内心思考。我在写作中寻找自我，虽无豪言壮语，却不再渴望用文字改变世界。我只是单纯地记录眼前一切。</p><p>每次拿起笔，仿佛与过往的自己告别，又与未来的自己对话。在这里，我与外界断绝联系，但内心的波澜从未停止。那些曾经的理想与抱负似乎并未完全消散，而是在我的文字中找到了新的归宿。我开始走出书斋，深山林间随心而行，去体会这片大地的风光。与大自然以新形式对话，倾听他们的声音。在这种情况下，我写下了那篇《小石潭记》：「潭西南而望，斗折蛇行，明灭可见。其岸势犬牙差互，不可知其源……坐潭上，四面竹树环合，寂寥无人，凄神寒骨，悄怆幽邃。」这篇小记表面描绘自然景色，但细品其情感与深沉的寂寞，才是最动人的部分。</p><h2 id="归乡与再别"><a href="#归乡与再别" class="headerlink" title="归乡与再别"></a>归乡与再别</h2><p>元和十年，即公元八百一十五年，朝廷传来诏令，唐宪宗终于收回对永贞革新派的成见，召我与刘禹锡等人回朝。我本没有太多奢望，只希望能回到那个承载无数记忆的地方——长安。这里是我出生之地，也承载着我少年时的理想与憧憬。虽然我已不再年轻，也不再对政治有着当年的热情，但总能在故土找到一丝慰藉。</p><p>我记得自己年轻时满怀梦想，却也明白，经过十年永州岁月的磨砺，心志早已冷却。故乡啊！即使我知道，这次回来或许无法恢复曾经的光辉，但回家了，那就足够了。拿到这份诏书，泪水夺眶而出，兴奋地写下《诏追赴都二月至灞亭上》：「十一年前南渡客，四千里外北归人。诏书许逐阳和至，驿路开花处处新。」因此我回到了长安。</p><p>然而好景不长，仅一个月后，因刘禹锡写的一首桃花诗《元和十年自朗州至京戏赠看花诸君子》再度遭到政敌的陷害。刘禹锡的诗写道：「紫陌红尘拂面来，无人不道看花回。玄都观里桃千树，尽是刘郎去后栽。」因此，我们被诬告无悔之心，再遭贬谪。我刚回长安便再度被贬，心如死灰，如同荒芜大地上被随风吹翻的尘土。这次我被贬至柳州，官职虽升（刺史比司马高），但柳州更偏远。当时我明白，远离长安，便远离了曾经的自己。</p><h2 id="坚守与担当"><a href="#坚守与担当" class="headerlink" title="坚守与担当"></a>坚守与担当</h2><p>但我并不孤单，在这片寂静土地上仍有温暖。比如刘禹锡，我的挚友，因那首诗也被贬，身处的播州更为遥远艰苦。我心中惆怅，忧虑他母亲的健康。于是，我上书朝廷，请求我们二人对调，让刘禹锡到条件稍好的地方。虽朝廷未完全答应，却将刘禹锡调至连州，也算是我努力的一部分。无论如何，我与刘禹锡终究要分别。衡阳告别时，心中难舍，泪水在眼中打转，曾经的梦想与共同度过的时光如流星般消逝。</p><p>我初到柳州，身为刺史，登上城楼，远眺四周，心中百感交集，茫茫沙野苍凉空旷。我不禁想起与我一同被贬的韦执谊、凌准、韩泰、陈谏、韩晔、程异等志同道合的好友。曾经我们渴望改变世界，如今天南地北，音信难寻，孤寂而伤感。何时再能见面呢？我也不知道。因此，我在柳州挥笔写下《登柳州城楼寄漳汀封连四州刺史》，寄托心中无尽愁思：</p><p>「城上高楼接大荒，海天愁思正茫茫。惊风乱飐芙蓉水，密雨斜侵薜荔墙。岭树重遮千里目，江流曲似九回肠。共来百越文身地，犹自音书滞一乡。」</p><p>我首先废除了奴婢制度，解放了奴婢。在唐朝等级森严，奴婢的存在是社会一大污点，地位卑低贱，如同主人的玩物，生死掌控于他人手中。柳州作为偏远地方，奴婢制度尤为严重，拥有奴婢的豪强地主对百姓的压迫更为残酷。面对这种不公，我毫不畏惧权贵，毅然决然决定废除奴婢终身制，允许他们通过赎身或劳动获得自由，打破身份固化，为无辜百姓带来生机。</p><p>其次，我关注民生，发展生产。柳州地理条件虽不如长安等大城市，但我依然通过推广柑橘、竹子、柳树等种植方式，极大改善当地环境，为百姓提供更好的生计。我发现当地居民饮水困难，需远道取水，遂组织人力在当地打井，解决水源问题。许多人说我柳宗元做的是小事，但我觉得这些看似平凡的小事，实则为百姓生活带来了实实在在的改善。</p><p>此外，我还兴办学校，恢复府学，提倡文化教育，传播中原文化。当地百姓迷信巫术，利用鸡骨算命，尚有献祭牲畜的陋习。我利用权力强力破除这些迷信，推广医学，倡导理性。我深知，唯有通过教育才能改变人的思想，为国家未来铺路。</p><p>在柳州的四年中，作为地方官员，我没有卑躬屈节迎合权贵，哪怕这样能让生活更好。我始终以百姓为本，精于吏治，勤政为民。我坚信，民本思想才是治国根本，唯有站在人民这一边，才能为国家未来打下基础。正如我在《捕蛇者说》中所言，「苛政猛于虎」，那些压迫百姓的政令，其实比猛虎还要可怕。我在柳州的所作所为，正是要让苛政远离人民，让百姓生活得到实实在在的改善。</p><h2 id="健康与思索"><a href="#健康与思索" class="headerlink" title="健康与思索"></a>健康与思索</h2><p>然而，自来到柳州，我的健康日益衰退，身体几乎被病痛吞噬，百病缠身。每天的痛苦折磨着我的灵魂，但即便如此，我依然未停止为百姓操劳的脚步。尽管身体愈发虚弱，我始终觉得要为了百姓的希望而奋斗。正因如此，我拖着病体，仍坚守政务。此时在长安的唐宪宗始终对我们发起永贞革新的「罪臣」耿耿于怀，反对派的攻讦与阻挠，使我重回长安的希望遥不可及。「一身去国六千里，万死投荒十二年。」我的心情愈发沉重，身体也愈加虚弱。岁月无情，官场失意与流亡生涯的孤独，宛如无法挣脱的阴霾，时刻笼罩心头。我所能做的，便是为百姓办些事情，而如今似乎也难以长久。</p><p>当时阳春二月的景象，竟如秋天般寒冷萧瑟。白花盛开，原应生机盎然，但那天突如其来下了一场暴雨，榕叶满庭，湿漉漉的泥水四溅，黄莺在庭院中悲啼。这样的景象更让我感到忧虑孤独，于是提笔写下《柳州二月榕叶落尽偶题》：</p><p>「宦情羁思共凄凄，春半如秋意转迷。山城过雨百花尽，榕叶满庭莺乱啼。」</p><h2 id="临终的思考"><a href="#临终的思考" class="headerlink" title="临终的思考"></a>临终的思考</h2><p>病痛、失意、乡愁，这一切仿佛无形的枷锁，将我紧紧束缚。回望往事，我已不再年轻，头发早已花白。岁月无情，我何时能回到故乡，何时能结束这漫长流亡生涯？我已无从知晓。生命之沙悄悄流逝，我深知时日无多。因此，那段时间，我又开始写诗，「从此忧来非一事，岂容华发待流年」。</p><p>病痛的折磨与政治的失意，让我的愁绪愈发浓重，心烦意乱。我因强撑病体处理政务，身体愈加虚弱。彼时，我的思绪常常飘向故乡，仿佛那遥远的山川仍能给我力量。于是在《别舍弟宗一》中写：「一身去国六千里，万死投荒十二年。桂岭瘴来云似墨，洞庭春尽水如天。欲知此后相思梦，长在荆门郢树烟。」在《与浩初上人同看山寄京华亲故》中，我更是想象：「海畔尖山似剑铓，秋来处处割愁肠。若为化得身千亿，散上峰头望故乡。」</p><p>在生命的尽头，我有一种深刻的预感，知晓自己时日无多，开始整理后事。我将所有作品汇集，寄给刘禹锡，希望他能将其整理成集。我还有四个未成年的孩子（柳周六、周七、崔氏女等），托付给刘禹锡与韩愈，希望在我死后，他们能照顾好这些孤苦无依的孩子。同时，长安、洛阳的老友仍为我奔走，力求调我回长安。</p><h2 id="历史的回响"><a href="#历史的回响" class="headerlink" title="历史的回响"></a>历史的回响</h2><p>他的名字叫柳宗元。他是唐代文学的重要人物，不仅是古文运动的杰出代表，还是哲学家、政治家、诗人和散文家。他的作品涵盖哲学、政治、文学等多个领域，影响深远，至今仍被传颂。</p><p>柳宗元的哲学思想继承并发扬唯物主义，批判天命论，强调社会历史是自然发展的过程。他在《天说》、《天对》等哲学论文中提出「人而非神」的重要性，展现出对社会政治的深刻思考。虽然柳宗元并非虔诚的佛教徒，但他从佛教中吸取思想，将佛学与儒家思想结合，追求心灵的解脱。他的思想兼容并蓄，成为唐代思想的独特风景。</p><p>柳宗元的诗歌语言朴实，风格淡雅，特别是在《江雪》、《渔翁》、《溪居》等作品中，通过清新俊爽的笔触，表达了流放期间的幽怨与哲理。他的诗歌展现了深沉的情感与思考，影响了后代诗人和文化学者。他的辞赋作品继承屈原的传统，情感真挚、形式严谨，代表了唐代词赋的高峰，体现出他在困厄中的坚持与理想。</p><p>在散文创作上，柳宗元与韩愈共同发起古文运动，主张文以明道。他们提倡文章应反映现实、批判时弊。柳宗元的作品，如讨论永贞革新得失的文章、《捕蛇者说》等，不仅在艺术上有所创新，也在思想上引领了唐代散文的革新。</p><p>柳宗元的山水游记《永州八记》在中国古代山水游记中占有重要地位。他通过细腻的笔触描绘自然景色，表达对自然的深刻感受与内心抒发。此外，柳宗元的寓言作品如《黔之驴》、《永某氏之鼠》等通过生动故事，揭示社会的不公与人性的弱点，具有强烈的社会责任感。</p><p>不可否认，柳宗元的文学成就横跨诗歌、散文、辞赋、寓言等多个领域，他的作品在形式与内容上均具有创新意义，并对后代文学产生深远影响。无论是哲学思考，还是文学形式上的突破，他都为中国文化的传承做出了杰出贡献。</p><h2 id="余响与反思"><a href="#余响与反思" class="headerlink" title="余响与反思"></a>余响与反思</h2><p>他的名字叫柳宗元。在永州十年的冬夜，他常盯着结冰的砚台发呆。长安的月光曾照在翰林院的青砖上，如今却碎在蛮荒之地的寒江里。而发呆的身影，却没有任由自己溺死在愤懑中。他在潮湿的竹纸上写《黔之驴》，笔锋一转，竟成了寓言大师。他给渔翁、樵夫、牧童、隶卒，字字沁着泥土的生气。最让我动容的是他的矛盾。他写《江雪》时，明明说天地间只剩我孤零零的一个人，但转身却在柳州修水井、办学堂、放奴婢。那个独钓寒江的身影，怀里其实揣着温热的人间烟火。</p><p>他总说「吾虽不合于俗」，翻开《永州八记》，满纸都是对一草一木的痴缠。读他的诗文，总觉得有刺骨的寒气往骨头缝里钻。这不是苏轼大江东去的旷达，也不是杜甫沉郁顿挫的悲怆，而是像永州江畔那些嶙峋的怪石，被命运反复冲刷后，显露出粗粝的生命力。柳州城头的木棉花年复一年绽放，柳宗元最终未能返回长安。但他在精神荒野中开辟的道路，让后世文人看到了另一种可能。庙堂之路断绝时，思想的星空依然璀璨。</p><p>他的命运似乎是从灿烂的荣光走向深沉的孤寂，但恰恰是在这样的孤独与落寞中，他的笔触愈显有力、愈加深邃。这种在绝境中的创造性转化，让中国文学史拥有了最苍劲的冬日意象，也让知识分子的精神图谱上增添了一条向死而生的曲线。</p><p>他临终前或许会回想起写过的诗句：「若为化得身千亿，散上峰头望故乡。」是那个昔日的长安少年，最终未能回到故乡，却在他用血泪浇灌的南方土地上长出了新的根系。这种在绝境中依然保持书写姿势的倔强，比任何华丽的修饰都更接近文学的本质，这种本质，恰似如今我们竭力寻找的对抗异化的精神抗体。</p>]]></content>
    
    
    <categories>
      
      <category>诗词</category>
      
    </categories>
    
    
    <tags>
      
      <tag>刘禹锡 柳宗元 唐诗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>龙生九子到底有什么不同？</title>
    <link href="/2025/04/12/%E9%BE%99%E7%94%9F%E4%B9%9D%E5%AD%90/"/>
    <url>/2025/04/12/%E9%BE%99%E7%94%9F%E4%B9%9D%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<p>我们的龙爸是一个多情的龙，无论是什么物种都能被他拽入爱河，他不但没有种族歧视，还能冲破生物基因限制，和任何一个物种都能生出一个小神兽，堪称龙界的「段正淳」！</p><h2 id="囚牛（Qiu-Niu）：琴音觅知音"><a href="#囚牛（Qiu-Niu）：琴音觅知音" class="headerlink" title="囚牛（Qiú Niú）：琴音觅知音"></a>囚牛（Qiú Niú）：琴音觅知音</h2><p>东海龙王敖广巡游人间时，偶遇一头青牛卧在溪边，以角轻触流水，竟发出清越如琴的声响。敖广心动，化身白衣公子与牛相伴三日，以云霞为弦、风雨为调，共谱天籁。后来青牛诞下囚牛。</p><p>一日，龙王来到云海之巅，只见一条<strong>青鳞龙首、蛇身盘绕</strong>的身影，正将头温柔地贴在一把千年古琴上，闭目聆听风中流转的音符。这正是长子<strong>囚牛</strong>。</p><p>龙王问：「吾儿，你可愿随父王统御雷霆，兴云布雨？」</p><p>囚牛睁开眼，琴弦轻颤：「父王，雷鸣是天地之音，雨落是江河之韵。儿臣更愿守护世间至美音律，让万物心魂得以共鸣。」</p><p>龙王叹息，将囚牛之形刻于天下琴头，封为「<strong>乐神</strong>」。</p><h2 id="睚眦（ya-zi）：刀锋铸战魂"><a href="#睚眦（ya-zi）：刀锋铸战魂" class="headerlink" title="睚眦（yá zì）：刀锋铸战魂"></a>睚眦（yá zì）：刀锋铸战魂</h2><p>敖广与山中豺女相遇于血月之夜。豺女为护幼崽独战狼群，虽遍体鳞伤仍死守岩洞。敖广以龙血救之，豺女却反咬其爪，怒道：「施恩者，亦为居高者！」后诞下睚眦，子生而衔刃，双目赤红如焰。</p><p>龙王转身来到血煞弥漫的古战场，只见一头豺首龙身、獠牙如刀的猛兽，正死死咬住一柄巨剑的吞口，眼中燃烧着永不熄灭的战意。这便是次子<strong>睚眦</strong>。</p><p>龙王问：「吾儿，你可愿为龙族开疆拓土？」</p><p>睚眦低吼，声震金铁：「父王，战场即我归宿！我愿附于神兵利器，以杀气镇邪魔，护持持剑者勇武不灭！」</p><p>龙王点头，命睚眦永驻「<strong>兵器之魂</strong>」。</p><h2 id="嘲风（chao-feng）：檐角镇八方"><a href="#嘲风（chao-feng）：檐角镇八方" class="headerlink" title="嘲风（cháo fēng）：檐角镇八方"></a>嘲风（cháo fēng）：檐角镇八方</h2><p>西域沙海中，敖广救下一只被金雕追猎的猞猁。猞猁非但不逃，反而跃上沙丘最高处对雕嘶吼。敖广大笑：「尔非猛禽，何来胆气？」猞猁答：「居高者，方见天地广。」嘲风出生时足生云纹，三日便能踏风而行。</p><p>龙王行至巍峨天宫，忽见檐角上一只似狮似犬、昂首远眺的瑞兽，目光如炬，扫视四方。这是三子<strong>嘲风</strong>。它不等龙王开口，便朗声道：「父王！儿臣生性好登高望远，最喜立于险峻之处！这宫殿檐角，上可窥天机，下可慑妖邪，正是我的王座！」龙王见其气宇轩昂，遂封它为「<strong>殿角镇守神</strong>」，保宫阙平安。</p><h2 id="蒲牢（pu-lao）：钟鸣惊四海"><a href="#蒲牢（pu-lao）：钟鸣惊四海" class="headerlink" title="蒲牢（pú láo）：钟鸣惊四海"></a>蒲牢（pú láo）：钟鸣惊四海</h2><p>敖广醉酒与巨蛤打赌，称海啸声不及龙吟。巨蛤张口吞浪，腹中雷鸣竟震得敖广鳞甲颤动。醒后岸边留下一枚莹白龙蛋，破壳而出的蒲牢闻雷则啼，见鲸则窜。</p><p>行至铸钟台，龙王被一阵震耳欲聋的钟声吓了一跳！只见一只小龙（形似龙但较小）盘在巨钟顶上，正对着海浪拼命嘶吼。这是四子<strong>蒲牢</strong>。</p><p>奇怪的是，海面一有鲸鱼影子浮现，它便吓得缩成一团，叫声反而更大！</p><p>「父…父王！」蒲牢颤抖着说，「我怕那巨鲸！但一害怕我就吼…吼声竟能让钟声更响！」</p><p>龙王哭笑不得，将蒲牢铸为「<strong>钟钮</strong>」，借其惧意助长钟鸣，声传千里。</p><h2 id="狻猊（suan-ni）：香篆定禅心"><a href="#狻猊（suan-ni）：香篆定禅心" class="headerlink" title="狻猊（suān ní）：香篆定禅心"></a>狻猊（suān ní）：香篆定禅心</h2><p>雪山白狮为救坠崖幼虎，以尾卷住冰棱，僵立七日成冰雕。敖广以呼吸融化冰霜，却见狮魂不散，凝成香火萦绕的石胎。狻猊出生时爪握沉香，呼气成烟。</p><p>龙王踏入佛寺，烟雾袅袅中，见一只形似雄狮、身披龙鳞的巨兽，正安静地蹲坐在香炉旁，闭目吞吐着袅袅青烟，神态庄严。这是五子<strong>狻猊</strong>。</p><p>龙王轻唤，狻猊睁眼，眼中一片平和：「父王，喧嚣非我所愿。这烟火人间，禅意悠远。我愿守此清静，护持佛法庄严。」</p><p>龙王赞其心性，封它为「<strong>香炉瑞兽</strong>」、「<strong>佛座护法</strong>」。</p><h2 id="赑屃（bi-xi）：碑下负千秋"><a href="#赑屃（bi-xi）：碑下负千秋" class="headerlink" title="赑屃（bì xì）：碑下负千秋"></a>赑屃（bì xì）：碑下负千秋</h2><p>大龟因背负蓬莱仙岛万年，甲裂渗血。敖广以龙涎疗伤时，龟甲突然崩裂，爬出通体碑文的赑屃。它第一句话是：「父亲，山该往何处驮？」</p><p>龙王来到帝王陵前，见一只龙首巨龟，正奋力驮着高耸入云的石碑（碑碣）。这是六子<strong>赑屃</strong>。它力大无穷，步履沉稳。</p><p>龙王问：「吾儿，负重前行，可觉辛苦？」</p><p>赑屃声音浑厚：「父王，石碑刻着功绩与历史，重如泰山，亦贵如泰山。儿臣能驮起这千秋功业，是莫大荣耀！」</p><p>龙王感动，命赑屃永为「<strong>碑下神龟</strong>」，象征不朽与承重。</p><h2 id="狴犴（bi-an）：狱门守正道"><a href="#狴犴（bi-an）：狱门守正道" class="headerlink" title="狴犴（bì àn）：狱门守正道"></a>狴犴（bì àn）：狱门守正道</h2><p>敖广与白虎争夺雷池，撕斗时一滴龙血溅入白虎额间「王」纹。后白虎产子，幼崽不饮乳，反噬母虎獠牙。狴犴睁眼时，眼中自有善恶簿翻动。</p><p>行至森严的阴司法衙，龙王见大门上赫然镶嵌着一颗威严的虎头龙面，双目如电，怒视下方。这是七子<strong>狴犴</strong>。</p><p>它声如洪钟：「父王！世间罪恶，逃不过我的法眼！我立于此门，让奸邪胆寒，还天地清明！」</p><p>龙王赞其刚直，封它为「<strong>狱门守护神</strong>」，镇守囹圄（líng yǔ）之地。</p><h2 id="螭吻（chi-wen）：屋脊吞灾火"><a href="#螭吻（chi-wen）：屋脊吞灾火" class="headerlink" title="螭吻（chī wěn）：屋脊吞灾火"></a>螭吻（chī wěn）：屋脊吞灾火</h2><p>敖广与鲤鱼精相恋，赠其逆鳞为聘。鲤鱼精跃龙门时遭雷火焚身，竟吞烈焰化龙。所生螭吻龙头鱼身，喉如熔炉。</p><p>龙王抬头仰望皇宫大殿的屋脊，只见一条口阔身短、鱼尾龙形的巨兽，正张开大嘴，仿佛要吞下整条屋脊。这是八子<strong>螭吻</strong>。</p><p>它急切道：「父王！儿臣天生口阔，能吞江海！我要将这屋脊（象征最高处）吞在口中，吸尽天下火灾，护佑家宅安宁！」</p><p>龙王知其能辟火，封它为「<strong>屋脊吞火兽</strong>」。</p><h2 id="椒图（jiao-tu）：衔环闭是非"><a href="#椒图（jiao-tu）：衔环闭是非" class="headerlink" title="椒图（jiāo tú）：衔环闭是非"></a>椒图（jiāo tú）：衔环闭是非</h2><p>最后，龙王回到龙宫大门，只见两扇巨门上，各镶着一只形似螺蚌的兽首，口中牢牢衔着门环，双目紧闭，仿佛对外界充耳不闻。这是最小的儿子<strong>椒图</strong>。</p><p>它声音细弱但坚定：「父王…外面太吵了。我就想关上门，守住咱家的清净。谁也别想随便打扰！」</p><p>龙王无奈，却也欣赏其守护之意，封它为「<strong>门环镇守</strong>」，保家宅安宁。</p>]]></content>
    
    
    
    <tags>
      
      <tag>龙生九子</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTPS为什么是安全的</title>
    <link href="/2024/07/30/HTTPS%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AE%89%E5%85%A8%E7%9A%84/"/>
    <url>/2024/07/30/HTTPS%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%AE%89%E5%85%A8%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<h2 id="1-HTTP-协议"><a href="#1-HTTP-协议" class="headerlink" title="1. HTTP 协议"></a>1. HTTP 协议</h2><p>在谈论 HTTPS 协议之前，先来回顾一下 HTTP 协议的概念。</p><h3 id="1-1-HTTP-协议介绍"><a href="#1-1-HTTP-协议介绍" class="headerlink" title="1.1 HTTP 协议介绍"></a>1.1 HTTP 协议介绍</h3><p>HTTP 协议是一种基于文本的传输协议，它位于 OSI 网络模型中的应用层。</p><p><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMPaLcMq3QmHejrxXzACZzsSCn_wacAAk7KMRvYf7lVFNilpeGTDWIBAAMCAAN5AAM2BA.png"></p><p>HTTP 协议是通过客户端和服务器的请求应答来进行通讯，目前协议由之前的 RFC 2616 拆分成立六个单独的协议说明（RFC 7230、RFC 7231、RFC 7232、RFC 7233、RFC 7234、RFC 7235），通讯报文如下：</p><ul><li>请求</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">POST http://www.baidu.com HTTP/1.1  <br>Host: www.baidu.com  <br>Connection: keep-alive  <br>Content-Length: 7  <br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36  <br>  <br>wd=HTTP<br></code></pre></td></tr></table></figure><ul><li>响应</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">HTTP/1.1 200 OK  <br>Connection: Keep-Alive  <br>Content-Encoding: gzip  <br>Content-Type: text/html;charset=utf-8  <br>Date: Thu, 14 Feb 2019 07:23:49 GMT  <br>Transfer-Encoding: chunked  <br>  <br>&lt;html&gt;...&lt;/html&gt;<br></code></pre></td></tr></table></figure><h3 id="1-2-HTTP-中间人攻击"><a href="#1-2-HTTP-中间人攻击" class="headerlink" title="1.2 HTTP 中间人攻击"></a>1.2 HTTP 中间人攻击</h3><p>HTTP 协议使用起来确实非常的方便，但是它存在一个致命的缺点：不安全。</p><p>我们知道 HTTP 协议中的报文都是以明文的方式进行传输，不做任何加密，这样会导致什么问题呢？下面来举个例子：</p><ol><li><p>小明在 JAVA 贴吧发帖，内容为我爱 JAVA：<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMQaLcNET53fce1XOwOYwa-GGfOSGsAAk_KMRvYf7lVdys45QXkRU4BAAMCAAN5AAM2BA.png"></p></li><li><p>被中间人进行攻击，内容修改为我爱 PHP<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMRaLcNN0dhrf8cFBuMxdpvIcMp6nYAAlDKMRvYf7lV1ViIG0bleWgBAAMCAAN5AAM2BA.png"></p></li></ol><h3 id="1-3-防止中间人攻击"><a href="#1-3-防止中间人攻击" class="headerlink" title="1.3 防止中间人攻击"></a>1.3 防止中间人攻击</h3><p>这个时候可能就有人想到了，既然内容是明文那我使用对称加密的方式将报文加密这样中间人不就看不到明文了吗，于是如下改造：</p><ol><li>双方约定加密方式<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMSaLcNSoYmY_7a29esbSuJiWHgfx8AAlHKMRvYf7lVuwABng_MAAEjxwEAAwIAA3kAAzYE.png"></li><li>使用 AES 加密报文<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMTaLcNYz-U5ao0c-XqLtonXyqqqBsAAlLKMRvYf7lVWrA7K8yH0OsBAAMCAAN5AAM2BA.png"><br>这样看似中间人获取不到明文信息了，但其实在通讯过程中还是会以明文的方式暴露加密方式和秘钥，如果第一次通信被拦截到了，那么秘钥就会泄露给中间人，中间人仍然可以解密后续的通信：<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMUaLcNc22OYLUdPSC50nd9509O-nIAAlPKMRvYf7lVTR8iv4508LsBAAMCAAN5AAM2BA.png"><br>那么对于这种情况，我们肯定就会考虑能不能将秘钥进行加密不让中间人看到呢？答案是有的，采用非对称加密，我们可以通过 RSA 算法来实现。</li></ol><p>在约定加密方式的时候由服务器生成一对公私钥，服务器将公钥返回给客户端，客户端本地生成一串秘钥(AES_KEY)用于对称加密，并通过服务器发送的公钥进行加密得到(AES_KEY_SECRET)，之后返回给服务端，服务端通过私钥将客户端发送的 AES_KEY_SECRET 进行解密得到 AEK_KEY,最后客户端和服务器通过 AEK_KEY 进行报文的加密通讯，改造如下：<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMVaLcNimtvuDuWZVNXeXFw_SvJBz0AAlTKMRvYf7lV9y5-UVwojAcBAAMCAAN5AAM2BA.png"></p><p>可以看到这种情况下中间人是窃取不到用于 AES 加密的秘钥，所以对于后续的通讯是肯定无法进行解密了，那么这样做就是绝对安全了吗？</p><p>所谓道高一尺魔高一丈，中间人为了对应这种加密方法又想出了一个新的破解方案，既然拿不到AES_KEY，那我就把自己模拟成一个客户端和服务器端的结合体，在用户-&gt;中间人的过程中中间人模拟服务器的行为，这样可以拿到用户请求的明文，在中间人-&gt;服务器的过程中中间人模拟客户端行为，这样可以拿到服务器响应的明文，以此来进行中间人攻击：<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMWaLcNoVIZvTd5_l6_zA-8i8aMGmAAAlXKMRvYf7lVg24MJKEvkNUBAAMCAAN5AAM2BA.png"></p><p>这一次通信再次被中间人截获，中间人自己也伪造了一对公私钥，并将公钥发送给用户以此来窃取客户端生成的 AES_KEY，在拿到 AES_KEY 之后就能轻松的进行解密了。</p><p>中间人这样为所欲为，就没有办法制裁下吗，当然有啊，接下来我们看看 HTTPS 是怎么解决通讯安全问题的。</p><h2 id="2-HTTPS-协议"><a href="#2-HTTPS-协议" class="headerlink" title="2. HTTPS 协议"></a>2. HTTPS 协议</h2><h3 id="2-1-HTTPS-简介"><a href="#2-1-HTTPS-简介" class="headerlink" title="2.1 HTTPS 简介"></a>2.1 HTTPS 简介</h3><p>HTTPS 其实是SSL+HTTP的简称,当然现在SSL基本已经被TLS取代了，不过接下来我们还是统一以SSL作为简称，SSL协议其实不止是应用在HTTP协议上，还在应用在各种应用层协议上，例如：FTP、WebSocket。</p><p>其实SSL协议大致就和上一节非对称加密的性质一样，握手的过程中主要也是为了交换秘钥，然后再通讯过程中使用对称加密进行通讯，大概流程如下：<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMXaLcNudLv3xqhXsDCILcukHCfi9kAAlbKMRvYf7lVTWPjEn1YrDkBAAMCAAN5AAM2BA.png"></p><p>这里我只是画了个示意图，其实真正的 SSL 握手会比这个复杂的多，但是性质还是差不多，而且我们这里需要关注的重点在于 HTTPS 是如何防止中间人攻击的。</p><p>通过上图可以观察到，服务器是通过 SSL 证书来传递公钥，客户端会对 SSL 证书进行验证，其中证书认证体系就是确保SSL安全的关键，接下来我们就来讲解下CA 认证体系，看看它是如何防止中间人攻击的。</p><h3 id="2-2-CA-认证体系"><a href="#2-2-CA-认证体系" class="headerlink" title="2.2 CA 认证体系"></a>2.2 CA 认证体系</h3><p>上一节我们看到客户端需要对服务器返回的 SSL 证书进行校验，那么客户端是如何校验服务器 SSL 证书的安全性呢。</p><ul><li>权威认证机构</li></ul><p>在 CA 认证体系中，所有的证书都是由权威机构来颁发，而权威机构的 CA 证书都是已经在操作系统中内置的，我们把这些证书称之为 CA 根证书</p><ul><li>签发证书</li></ul><p>我们的应用服务器如果想要使用 SSL 的话，需要通过权威认证机构来签发 CA 证书，我们将服务器生成的公钥和站点相关信息发送给 CA 签发机构，再由 CA 签发机构通过服务器发送的相关信息用 CA 签发机构进行加签，由此得到我们应用服务器的证书，证书会对应的生成证书内容的签名，并将该签名使用 CA 签发机构的私钥进行加密得到证书指纹，并且与上级证书生成关系链。</p><ul><li>如何验证服务器证书</li></ul><p>那么客户端(浏览器)又是如何对服务器证书做校验的呢，首先会通过层级关系找到上级证书，通过上级证书里的公钥来对服务器的证书指纹进行解密得到签名(sign1)，再通过签名算法算出服务器证书的签名(sign2)，通过对比sign1和sign2，如果相等就说明证书是没有被篡改也不是伪造的。</p><p>这里有趣的是，证书校验用的 RSA 是通过私钥加密证书签名，公钥解密来巧妙的验证证书有效性。</p><p>这样通过证书的认证体系，我们就可以避免了中间人窃取AES_KEY从而发起拦截和修改 HTTP 通讯的报文。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>首先先通过对 HTTP 中间人攻击的来了解到 HTTP 为什么是不安全的，然后再从安全攻防的技术演变一直到 HTTPS 的原理概括，这里和大家一起学习。<br>原博客： <a href="https://mp.weixin.qq.com/s/IHPUopud8eEOM8-T73Guuw?scene=1&click_id=2">https://mp.weixin.qq.com/s/IHPUopud8eEOM8-T73Guuw?scene=1&amp;click_id=2</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 Cloudflare 加速 GitHub Pages 部署的个人博客</title>
    <link href="/2024/06/13/%E4%BD%BF%E7%94%A8%20Cloudflare%20%E5%8A%A0%E9%80%9F%20GitHub%20Pages%20%E9%83%A8%E7%BD%B2%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/06/13/%E4%BD%BF%E7%94%A8%20Cloudflare%20%E5%8A%A0%E9%80%9F%20GitHub%20Pages%20%E9%83%A8%E7%BD%B2%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>GitHub Pages 是目前很多开发者和博主选择的免费托管静态网站的服务，结合 Cloudflare 的加速和保护服务，可以显著提升博客的访问速度、安全性和稳定性。下面，我们将一步步教你如何将 GitHub Pages 和 Cloudflare 结合起来，让你的博客飞速运行。</p><h2 id="一、为什么要用-Cloudflare-加速-GitHub-Pages？"><a href="#一、为什么要用-Cloudflare-加速-GitHub-Pages？" class="headerlink" title="一、为什么要用 Cloudflare 加速 GitHub Pages？"></a><strong>一、为什么要用 Cloudflare 加速 GitHub Pages？</strong></h2><p>使用 GitHub Pages 部署静态博客后，虽然免费且可靠，但它可能会面临以下问题：</p><ol><li><strong>加载速度较慢</strong>：GitHub Pages 本身的 CDN 并不总是覆盖全球，尤其是对国内用户，访问速度可能较慢。</li><li><strong>安全性不足</strong>：GitHub Pages 默认提供 HTTPS，但没有额外的防护手段，比如 DDoS 保护或 WAF（Web 应用防火墙）。</li><li><strong>缺乏优化</strong>：GitHub Pages 不支持图片压缩、缓存优化等功能。</li></ol><p>通过使用 Cloudflare，可以实现以下增强：</p><ul><li><strong>全球加速</strong>：Cloudflare 提供 200+ 个边缘服务器节点覆盖全球，显著提升博客的加载速度。</li><li><strong>流量保护</strong>：增强 HTTPS 安全性，并提供防 DDoS、防火墙等安全功能。</li><li><strong>缓存优化</strong>：通过 Cloudflare 的强大缓存机制，加速静态文件（如 HTML、CSS、JS）的加载。</li><li><strong>免费服务</strong>：Cloudflare 免费计划已经足够满足个人博客的加速需求。</li></ul><h2 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a><strong>二、准备工作</strong></h2><p>在开始操作之前，需要确保以下事项：</p><ol><li><strong>一个在 GitHub Pages 上运行的个人博客</strong>：<ul><li>你的博客已经部署在 GitHub Pages 上，并可以通过 <code>https://yourusername.github.io</code> 或绑定的自定义域名访问。</li></ul></li><li><strong>自定义域名</strong>：<ul><li>你需要购买一个域名（如通过阿里云、腾讯云或其他域名服务商），并将其绑定到你的 GitHub Pages 博客。</li><li>如果没有域名，可以先去购买，域名备案根据区域要求来确定是否需要。</li></ul></li><li><strong>一个 Cloudflare 账号</strong>：<ul><li>前往 <a href="https://www.cloudflare.com/">Cloudflare 官网</a> 注册一个帐户。</li></ul></li></ol><hr><h2 id="三、开始配置-Cloudflare-加速"><a href="#三、开始配置-Cloudflare-加速" class="headerlink" title="三、开始配置 Cloudflare 加速"></a><strong>三、开始配置 Cloudflare 加速</strong></h2><h3 id="1-将自定义域名添加到-Cloudflare"><a href="#1-将自定义域名添加到-Cloudflare" class="headerlink" title="1. 将自定义域名添加到 Cloudflare"></a><strong>1. 将自定义域名添加到 Cloudflare</strong></h3><ol><li>登录到 <a href="https://www.cloudflare.com/">Cloudflare</a> 的控制台。</li><li>点击右上角的 <strong>Add a Site</strong>（添加站点）。</li><li>输入你的域名（如 <code>example.com</code>），点击开始设置。<strong>注意不要带 <code>www</code> 或者 <code>https</code></strong>，比如我的就直接填写 <code>yixin.xz.cn</code></li><li>选择 <strong>Free Plan</strong>（免费计划），然后点击 “Continue”（继续）。</li></ol><h3 id="2-配置-DNS-解析"><a href="#2-配置-DNS-解析" class="headerlink" title="2. 配置 DNS 解析"></a><strong>2. 配置 DNS 解析</strong></h3><p>Cloudflare 会自动扫描你的域名的现有 DNS 记录。按照以下步骤配置：</p><ol><li><p>确保你的域名在 GitHub Pages 的解析记录正确：</p><ul><li>如果你的域名是裸域（如 <code>example.com</code>），需要添加一条 A 记录，指向 GitHub Pages 的 IP 地址：<br> <img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMKaLXLXJ-A2MpfvpKapX11Z6bdmbkAAufJMRvYf7FV2vOV4dmRco4BAAMCAAN5AAM2BA.png"></li></ul></li><li><p>按照上述方式再添加以下三条记录，类型和名称和上述相同，IPv 4 地址分别为：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">185.199.109.153  <br>185.199.110.153  <br>185.199.111.153<br></code></pre></td></tr></table></figure><ol start="3"><li>完成之后应该能看到列表中有以下四条这样的记录，除了 <code>名称</code> 是自己的域名外其他应该都和图中相同</li></ol><p><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMLaLXL4KBOHM0SF1Nx6IVth-QW3QEAAunJMRvYf7FVvfmrMfcqhOABAAMCAAN3AAM2BA.png"></p><p>上述添加的4条 ip 地址均是 GitHub Pages 的 IP 地址，具体可查看【 <a href="https://docs.github.com/zh/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">https://docs.github.com/zh/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site</a> 】</p><ol start="4"><li><p>点击继续后，cloudflare 会要求将我们 DNS 服务器修改为以下图中所示的的服务器，可以先截个图或者存文档里：<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMMaLXL-OPC78H8UeBVXdMh5F3fQlYAAurJMRvYf7FVotxrFUOOL70BAAMCAAN3AAM2BA.png"></p></li><li><p>进入腾讯云控制台，修改的 DNS 服务器为上图中 cloudflare 提供的 DNS 服务器</p></li></ol><h3 id="3-设置-Github-page"><a href="#3-设置-Github-page" class="headerlink" title="3. 设置 Github page"></a>3. 设置 Github page</h3><ol><li>进入 github. Io 对应的仓库，进入 <code>Settings</code></li><li>进入左栏中的 <code>pages</code>，在 <code>Custom domain</code> 中输入自己的域名，点击 <code>save</code>，如果成功会显示下图：<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMNaLXMEZcNQBFBT_uehbbkC98FedIAAuvJMRvYf7FVMQQx3gSJrD0BAAMCAAN5AAM2BA.png"></li><li>这样就可以通过域名来访问自己的博客了，还可以在上图中勾选 <code>Enforcrs HTTPS</code>，这样网站仅会通过https提供服务。</li></ol><h2 id="四、一些问题"><a href="#四、一些问题" class="headerlink" title="四、一些问题"></a>四、一些问题</h2><p>如果如下图显示 dns 配置不正确，推测可能是使用了 cloudflare 后，GitHub 验证 DNS 时返回的是 cdn 服务器的 ip 地址，而不是在 cloudflare 上开始配置的4个 GitHub page 的 ip 地址，可以在线 dig 一下自己的域名验证一下。不过只要网站能通过域名正常访问就没什么问题。<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMOaLXML7lbAduHu45XC2787jzQt6gAAuzJMRvYf7FVJki7bTjILFABAAMCAAN3AAM2BA.png"></p><p>重新更新博客之后不能访问 404，加速时在 Github 项目根目录中创建了一个 <code>CANME</code>  （没有任何后缀）文件，在里面写上自己的域名，不要有任何的空格和其他换行，将这个文件放入source文件夹，重新部署就行。</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>个人博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub自建图床</title>
    <link href="/2023/09/15/GitHub%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
    <url>/2023/09/15/GitHub%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
    
    <content type="html"><![CDATA[<h2 id="一、什么是图床"><a href="#一、什么是图床" class="headerlink" title="一、什么是图床"></a>一、什么是图床</h2><p>图床按照字面意思就是存储图片的床，用户可以将图片上传至图床，然后获得一个链接，这个链接可以在 Markdown 文档中使用，从而显示出我们存储的图片，使用 GitHub 作为图床多用于个人博客或者小型项目使用，完全免费，如果需要存储大量图片，推荐阿里云和腾讯云等大厂的云存储服务。</p><blockquote><p>注意：GitHub 作为图床使用是能被别人搜索到的，就是公开的。</p></blockquote><h2 id="二、使用-GitHub-作为图床的前提条件"><a href="#二、使用-GitHub-作为图床的前提条件" class="headerlink" title="二、使用 GitHub 作为图床的前提条件"></a>二、使用 GitHub 作为图床的前提条件</h2><ol><li>首先当然需要能正常访问 GitHub 官网啦，如果不能访问请施点魔法（国内访问各个地区不一样，有时候正常，有时候撞墙）；如果能正常访问就应该有一个 GitHub 账号；</li><li>再就是为方便我们上传图片的工具 PicGo ，PicGo 依赖 Node.js，安装 PicGo 之前先装好 Node.js。</li></ol><h2 id="三、创建"><a href="#三、创建" class="headerlink" title="三、创建"></a>三、创建</h2><h3 id="3-1-创建-GitHub-仓库"><a href="#3-1-创建-GitHub-仓库" class="headerlink" title="3.1 创建 GitHub 仓库"></a>3.1 创建 GitHub 仓库</h3><ol><li>首先登录你的 GitHub 账号</li><li>点击右上角的 「+」号，选择 「new repository」 ，创建一个仓库</li><li>取个名字（如 <code>my-images</code>），选择「public」类型，然后点击 「Create repository」，这样就创建好一个仓库啦</li></ol><h3 id="3-2-安装-PicGo"><a href="#3-2-安装-PicGo" class="headerlink" title="3.2 安装 PicGo"></a>3.2 安装 PicGo</h3><p>下载直接安装就行：[下载链接][ <a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85">https://picgo.github.io/PicGo-Doc/zh/guide/#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85</a> ]</p><h3 id="3-3-配置-PicGo"><a href="#3-3-配置-PicGo" class="headerlink" title="3.3 配置 PicGo"></a>3.3 配置 PicGo</h3><ol><li><p>在 PicGo 界面中，点击左侧的「Settings」。</p></li><li><p>在「Upload Settings」中，选择「GitHub」作为上传方式。</p></li><li><p>填写相关信息：</p><ul><li><p><strong>Repository</strong>: <code>你的GitHub用户名/你的仓库名</code>（例如 <code>yourusername/my-images</code>）</p></li><li><p><strong>Token</strong>: 生成一个 GitHub 访问令牌（token），以便 PicGo 可以访问你的仓库。</p><ul><li>访问 GitHub 账户设置，选择「Developer settings」-&gt;「Personal access tokens」-&gt;「Tokens (classic)」，然后点击「Generate new token」。</li><li>根据需要勾选「repo」权限，并点击「Generate token」。</li><li>复制生成的 token，并在 PicGo 中粘贴。</li></ul></li><li><p><strong>jsDelivr</strong>：在 PicGo 中设置自定义域名配置</p></li></ul></li></ol><div class="note note-success">            <p><a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D">https://cdn.jsdelivr.net/gh/用户名/仓库名</a></p>          </div><p>如图所示：</p><center>PicGo配置</center><p><img src="https://cdn.jsdelivr.net/gh/EthanLee-Esther/my-img/Pasted%20image%2020250731010615.png" title="PicGo配置"></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>图床</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免费图片托管解决方案：Telegraph-Image</title>
    <link href="/2023/09/12/%E5%85%8D%E8%B4%B9%E5%9B%BE%E7%89%87%E6%89%98%E7%AE%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%9ATelegraph-Image/"/>
    <url>/2023/09/12/%E5%85%8D%E8%B4%B9%E5%9B%BE%E7%89%87%E6%89%98%E7%AE%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%9ATelegraph-Image/</url>
    
    <content type="html"><![CDATA[<h1 id="Telegraph-Image"><a href="#Telegraph-Image" class="headerlink" title="Telegraph-Image"></a>Telegraph-Image</h1><p>免费图片托管解决方案，Flickr&#x2F;imgur 替代品。使用 Cloudflare Pages 和 Telegraph。</p><blockquote><p>由于原有的 Telegraph API 接口被官方关闭，需要将上传渠道切换至 Telegram Channel，请按照文档中的部署要求设置 <code>TG_Bot_Token</code> 和 <code>TG_Chat_ID</code>，否则将无法正常使用上传功能。</p></blockquote><h2 id="如何获取Telegram的Bot-Token和Chat-ID"><a href="#如何获取Telegram的Bot-Token和Chat-ID" class="headerlink" title="如何获取Telegram的Bot_Token和Chat_ID"></a>如何获取Telegram的<code>Bot_Token</code>和<code>Chat_ID</code></h2><p>如果您还没有Telegram账户，请先创建一个。接着，按照以下步骤操作以获取<code>BOT_TOKEN</code>和<code>CHAT_ID</code>：</p><ol><li><p><strong>获取<code>Bot_Token</code></strong></p><ul><li>在 Telegram 中，向 <a href="https://t.me/BotFather">@BotFather</a> 发送命令 <code>/newbot</code>，根据提示依次输入您的机器人名称和用户名。成功创建机器人后，您将会收到一个 <code>BOT_TOKEN</code>，用于与 Telegram API 进行交互。<br> <img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMDaIzdP1o4MU-vjivd9ZIj5bGpzlEAAorEMRu0iWhUJmbszeEEUQ4BAAMCAAN5AAM2BA.png"></li></ul></li><li><p><strong>设置机器人为频道管理员</strong></p><ul><li>创建一个新的频道（Channel），进入该频道后，选择频道设置。将刚刚创建的机器人添加为频道管理员，这样机器人才能发送消息。</li></ul></li><li><p><strong>获取 <code>Chat_ID</code></strong></p><ul><li>通过 <a href="https://t.me/VersaToolsBot">@VersaToolsBot</a> 获取您的频道 ID。向该机器人发送消息，按照指示操作，最后您将得到 <code>CHAT_ID</code>（即频道的 ID）。</li><li>或者通过<a href="https://t.me/GetTheirIDBot">@GetTheirIDBot</a>获取您的频道ID。向该机器人发送消息，按照指示操作，最后您将得到<code>CHAT_ID</code>（即频道的ID）。</li></ul></li></ol><p>最后去Cloudflare Pages后台设置相关的环境变量（注：修改环境变量后，需要重新部署才能生效）</p><table><thead><tr><th>环境变量</th><th>示例值</th><th>说明</th></tr></thead><tbody><tr><td><code>TG_Bot_Token</code></td><td><code>123468:AAxxxGKrn5</code></td><td>从<a href="https://t.me/BotFather">@BotFather</a>获取的Telegram Bot Token。</td></tr><tr><td><code>TG_Chat_ID</code></td><td><code>-1234567</code></td><td>频道的ID，确保TG Bot是该频道或群组的管理员。</td></tr></tbody></table><h2 id="如何部署"><a href="#如何部署" class="headerlink" title="如何部署"></a>如何部署</h2><h3 id="提前准备"><a href="#提前准备" class="headerlink" title="提前准备"></a>提前准备</h3><p>你唯一需要提前准备的就是一个 Cloudflare 账户 （如果需要在自己的服务器上部署，不依赖 Cloudflare，可参考<a href="https://github.com/cf-pages/Telegraph-Image/issues/46">#46</a> ）</p><h3 id="手把手教程"><a href="#手把手教程" class="headerlink" title="手把手教程"></a>手把手教程</h3><p>简单 3 步，即可部署本项目，拥有自己的图床</p><ol><li><p>Fork 本仓库 (注意：必须使用 Git 或者 Wrangler 命令行工具部署后才能正常使用，<a href="https://developers.cloudflare.com/pages/functions/get-started/#deploy-your-function">文档</a>)</p></li><li><p>打开 Cloudflare Dashboard，进入 Pages 管理页面，选择创建项目，选择 <code>连接到 Git 提供程序</code><br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMFaIzgebX_YVTAqIfYEjRULiCoGlEAApXEMRu0iWhUHznqJpXVrrwBAAMCAAN5AAM2BA.png"></p></li><li><p>按照页面提示输入项目名称，选择需要连接的 git 仓库，点击 <code>部署站点</code> 即可完成部署</p></li></ol><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol><li><p>无限图片储存数量，你可以上传不限数量的图片</p></li><li><p>无需购买服务器，托管于 Cloudflare 的网络上，当使用量不超过 Cloudflare 的免费额度时，完全免费</p></li><li><p>无需购买域名，可以使用 Cloudflare Pages 提供的 <code>*.pages.dev</code> 的免费二级域名，同时也支持绑定自定义域名</p></li><li><p>支持图片审查 API，可根据需要开启，开启后不良图片将自动屏蔽，不再加载</p></li><li><p>支持后台图片管理，可以对上传的图片进行在线预览，添加白名单，黑名单等操作</p></li></ol><h3 id="绑定自定义域名"><a href="#绑定自定义域名" class="headerlink" title="绑定自定义域名"></a>绑定自定义域名</h3><p>在 pages 的自定义域里面，绑定 cloudflare 中存在的域名，在 cloudflare 托管的域名，自动会修改 dns 记录<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMGaIzg8DAYCdLfB6jz4KkUpGb-VKcAApvEMRu0iWhUFt20nYJWl0sBAAMCAAN5AAM2BA.png"></p><h3 id="开启图片审查"><a href="#开启图片审查" class="headerlink" title="开启图片审查"></a>开启图片审查</h3><ol><li><p>请前往 <a href="https://moderatecontent.com/">https://moderatecontent.com/</a> 注册并获得一个免费的用于审查图像内容的 API key</p></li><li><p>打开 Cloudflare Pages 的管理页面，依次点击 <code>设置</code>，<code>环境变量</code>，<code>添加环境变量</code></p></li><li><p>添加一个 <code>变量名称</code> 为 <code>ModerateContentApiKey</code>，<code>值</code> 为你刚刚第一步获得的 <code>API key</code>，点击 <code>保存</code> 即可</p></li></ol><blockquote><p>注意：由于所做的更改将在下次部署时生效，你或许还需要进入 <code>部署</code> 页面，重新部署一下该本项目</p></blockquote><p>开启图片审查后，因为审查需要时间，首次的图片加载将会变得缓慢，之后的图片加载由于存在缓存，并不会受到影响<br><img src="https://telegraph-image-5ui.pages.dev/file/AgACAgUAAyEGAASnUzlSAAMHaIzhjIErYqUzj9iW6NnViIAMUigAAp_EMRu0iWhUjK63Vun6ctgBAAMCAAN5AAM2BA.png"></p><h3 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h3><ol><li><p>由于图片文件实际存储于 Telegraph，Telegraph 限制上传的图片大小最大为 5MB</p></li><li><p>由于使用 Cloudflare 的网络，图片的加载速度在某些地区可能得不到保证</p></li><li><p>Cloudflare Function 免费版每日限制 100,000 个请求（即上传或是加载图片的总次数不能超过 100,000 次）如超过可能需要选择购买 Cloudflare Function 的付费套餐，如开启图片管理功能还会存在 KV 操作数量的限制，如超过需购买付费套餐</p></li></ol><p>源项目地址： <a href="https://github.com/cf-pages/Telegraph-Image">https://github.com/cf-pages/Telegraph-Image</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>图床</tag>
      
      <tag>Cloudflare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小小英雄</title>
    <link href="/2019/03/21/%E5%B0%8F%E5%B0%8F%E8%8B%B1%E9%9B%84/"/>
    <url>/2019/03/21/%E5%B0%8F%E5%B0%8F%E8%8B%B1%E9%9B%84/</url>
    
    <content type="html"><![CDATA[<details>    <summary>河图的歌——渺小英雄</summary>    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="100" src="https://music.163.com/outchain/player?type=2&amp;id=1371082600&amp;auto=1&amp;height=100"></iframe></details>人生短暂，生命如歌，英雄不论出生，伟大不论长相，我们的父母就是我们的英雄，他们虽然没有做出轰轰烈烈事迹，却在为子女默默付出所有，他们是渺小的英雄，是伟大的人物。看着窗外慢慢后退的景物，爸爸的身影越来越远，逐渐模糊身后是留恋的故乡和家人。默默的算着，从两年前外出读书至今，在家的日子真的太少太少，原来长大，意味着与他们愈行愈远。小时候总以为爸爸妈妈无所不能，似乎想要的东西只要说一声，他们就能变出来，后来啊，方才明白，有些爱本无言。小时候总想去看看外面的世界，想着离开家该有多自由，可现在，我只想多陪陪他们，把全部的温柔给予似乎都太少。曾经觉得时光悠悠，有太多的时间让我去陪伴他们，于是我们把大多美好给了自己，给了兴趣，给了朋友，给了一时兴起的念头，却独独忘了多给父母一点。现如今猛然发现，时光匆匆，快到让人措手不及。我们一天天长大，他们一天天变老，多想有魔法可以回到小时候，多想让时间停滞，多想可以留在他们身边。回忆种种，我知道要学会收敛，可是为人子女总是忍不住的想要跟他发小脾气，真的忍不住。我知道他不完美，知道他没有什么知识文化，我也知道她用自己的拼搏为我撑起一片天……我知道我无以为报，我知道我无法像他们爱我一样爱他们……我知道我有什么会很懒，懒到不想学习，我知道自己有时候很任性，她叫我我充耳不闻，他——爸爸我知道自己的未来只能靠自己，我知道我胆小到不敢找老师问问题，我知道我对自己未来高考没什么把握，但这所有的一切，我都会强迫自己改变，只因我爱你。我知道自己并不聪明，但我也绝不信命，我会努力让自己更好。写了删，删了写，似乎不知道该用什么样的文字来表达这些感情，泪水早已模糊了视线，带着深深的留恋和不舍……爸爸，你也是我心中的英雄。]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>河图</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
